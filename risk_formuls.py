from math import *


def morbidity_rate(n, n_m):
    """ показатель заболеваемости
    (n - количество жителей, n_m - количество больных) """
    p = ((n_m / n) * 1000)
    p = round(p, 2)
    return f' показатель заболеваемости = {p}'


def standard_average_error(p, n):
    """ стандартная средняя ошибка
    (p – показатель заболеваемости;  n – число наблюдений) """
    m = sqrt(p * (1000 - p) / n)
    m = round(m, 2)
    return f' стандартная средняя ошибка = {m}'


def confidence_coefficient(p_1, p_2, m_1, m_2):
    """ коэффициент достоверности через критерий Стьюдента-Фишера
    (p_1 и p_2 – показатели заболеваемости в первой и второй выборках,
    m_1 и m_2 – стандартная средняя ошибка в первой и второй выборках) """
    t = ((p_1 - p_2) / sqrt(m_1 ** 2 + m_2 ** 2))
    t = round(t, 2)
    return f' коэффициент достоверности = {t}'


def marginal_error(t, p, q, n):
    m = t * sqrt((p * q) / n)
    m = round(m, 2)
    return f' предельная ошибка показателя = {m}'


def number_of_observations_if_p_proc(t, p, m):
    ''' количество наблюдений
    ( m - ошибка показателя
    t -  коэффициент достоверности
    p - величина показателя в % )
    '''
    n = ((t ** 2 * p * (100 - p)) / (m ** 2))
    n = round(n, 2)
    return f'число наблюдений = {n}'


def number_of_observations_if_p_float(t, p, m):
    ''' количество наблюдений
    ( m - ошибка показателя
    t -  коэффициент достоверности
    p - величина показателя в относительных единицах)
    '''
    n = ((t ** 2 * p * (1 - p)) / (m ** 2))
    n = round(n, 2)
    return f'число наблюдений = {n}'


def get_rfd(ld_50, k5):
    '''референтная доза
    k5 = коэффициент учитывающий условия проф деят.
    ld_50 = доза вещества при которой погибают 50% животных
    '''
    RfD = (ld_50 / 10 * 10 * 10 * 10 * k5)
    RfD = round(RfD, 2)
    return f' референтная доза Rfd = {RfD}'

a = input()